---
# yamllint disable rule:line-length
name: Build and tests

on:  # yamllint disable-line rule:truthy
  push:
  pull_request:
  workflow_dispatch:
jobs:
  build-bsd-server:
    runs-on: qemu
    continue-on-error: true
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: freebsd
            architecture: x86-64
            version: '13.2'

         # - name: openbsd
         #   architecture: x86-64
         #   version: '7.3'

         # - name: openbsd
         #   architecture: arm64
          #  version: '7.3'

          #- name: netbsd
         #   architecture: x86-64
         #   version: '9.2'
    name: build on BSD for server
    steps:
      - uses: actions/checkout@v3
      - name: test ${{ matrix.os.name }}
        uses: cross-platform-actions/action@v0.13.0
        with:
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 512M
          cpu_count: 1
          environment_variables: "http_proxy https_proxy"
          run: |
            uname -a
            sh .github/workflows/install-deps.sh
            cp configure.server configure.server.old
            cat configure.server.old | sed 's/^[[:space:]]*read /echo XXXXXXXX/' > configure.server
            #diff -u configure.server.old configure.server
            XYMONTOPDIR=/usr/local/xymon XYMONHOSTURL=/xymon CGIDIR=/usr/local/xymon/cgi-bin XYMONCGIURL=/xymon-cgi SECURECGIDIR=/usr/local/xymon/cgi-secure SECUREXYMONCGIURL=/xymon-seccgi XYMONHOSTNAME=$(hostname) XYMONLOGDIR=/var/log/xymon HTTPDGID=apache XYMONHOSTIP=127.0.0.1 MANROOT=/usr/local/man USEXYMONPING=n ENABLESSL=n ENABLELDAP=n XYMONUSER=xymon SYSTEMCARES=yes MAKE=gmake ./configure --server
            grep CARES Makefile
            gmake
            ls -l
  build-bsd-server-autotools:
    runs-on: qemu
    continue-on-error: true
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: freebsd
            architecture: x86-64
            version: '13.2'

          #- name: openbsd
          #  architecture: x86-64
          #  version: '7.3'

         #- name: openbsd
          #  architecture: arm64
          #  version: '7.3'

          #- name: netbsd
          #  architecture: x86-64
          #  version: '9.2'
    name: build on BSD server with autotools
    steps:
      - uses: actions/checkout@v3
      - name: test ${{ matrix.os.name }}
        uses: cross-platform-actions/action@v0.13.0
        with:
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 512M
          cpu_count: 1
          environment_variables: "http_proxy https_proxy"
          run: |
            uname -a
            sh .github/workflows/install-deps.sh
            export AUTOCONF_VERSION=2.71
            export AUTOMAKE_VERSION=1.16
            autoreconf --install
            ./configure --enable-server
            gmake
  build-bsd-client:
    runs-on: qemu
    continue-on-error: true
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: freebsd
            architecture: x86-64
            version: '13.2'

         # - name: openbsd
         #   architecture: x86-64
         #   version: '7.3'

         # - name: openbsd
         #   architecture: arm64
         #  version: '7.3'

         # - name: netbsd
         #   architecture: x86-64
         #   version: '9.2'
    name: build on BSD for client
    steps:
      - uses: actions/checkout@v3
      - name: test ${{ matrix.os.name }}
        uses: cross-platform-actions/action@v0.13.0
        with:
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 512M
          cpu_count: 1
          environment_variables: "http_proxy https_proxy"
          run: |
            uname -a
            sh .github/workflows/install-deps.sh
            cp configure.client configure.client.old
            cat configure.client.old | sed 's/^[[:space:]]*read /echo XXXXXXXX/' > configure.client
            #diff -u configure.server.old configure.server
            XYMONTOPDIR=/usr/local/xymon XYMONHOSTURL=/xymon CGIDIR=/usr/local/xymon/cgi-bin XYMONCGIURL=/xymon-cgi SECURECGIDIR=/usr/local/xymon/cgi-secure SECUREXYMONCGIURL=/xymon-seccgi XYMONHOSTNAME=$(hostname) XYMONLOGDIR=/var/log/xymon HTTPDGID=apache XYMONHOSTIP=127.0.0.1 MANROOT=/usr/local/man USEXYMONPING=n ENABLESSL=n ENABLELDAP=n XYMONUSER=xymon SYSTEMCARES=yes MAKE=gmake ./configure --client
            gmake
            ls -l
            [[ -x client/openbsd-meminfo ]] && ./client/openbsd-meminfo
            [[ -x client/netbsd-meminfo ]] && ./client/netbsd-meminfo
            [[ -x client/freebsd-meminfo ]] && ./client/freebsd-meminfo
  build-bsd-client-autotool:
    runs-on: qemu
    continue-on-error: true
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: freebsd
            architecture: x86-64
            version: '13.2'

          #- name: openbsd
          #  architecture: x86-64
          #  version: '7.3'

          #- name: openbsd
          #  architecture: arm64
          #  version: '7.3'

          #- name: netbsd
          #  architecture: x86-64
          #  version: '9.2'
    name: build on BSD for client with autotools
    steps:
      - uses: actions/checkout@v3
      - name: test ${{ matrix.os.name }}
        uses: cross-platform-actions/action@v0.13.0
        with:
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 512M
          cpu_count: 1
          environment_variables: "http_proxy https_proxy"
          run: |
            uname -a
            sh .github/workflows/install-deps.sh
            export AUTOCONF_VERSION=2.71
            export AUTOMAKE_VERSION=1.16
            autoreconf --install
            ./configure
            gmake
            ls -l
            [[ -x client/openbsd-meminfo ]] && ./client/openbsd-meminfo
            [[ -x client/netbsd-meminfo ]] && ./client/netbsd-meminfo
            [[ -x client/freebsd-meminfo ]] && ./client/freebsd-meminfo
  build-bullseye-original-client:
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: bullseye
          - name: bookworm
    runs-on: ${{ matrix.os.name }}
    name: build client on ${{ matrix.os.name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install packages
        run: sudo apt-get -y install build-essential
      - name: Create xymon user
        run: sudo useradd xymon
      - name: configure
        run: ./configure --client
      - name: build without any optional deps
        run: make
      - name: Install optionnal packages
        run: sudo apt-get -y install libssl-dev librrd-dev libc-ares-dev
      - name: build with any optional deps
        run: make
  build-bullseye-original-server:
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: bullseye
          #- name: bookworm
    runs-on: ${{ matrix.os.name }}
    name: build server on ${{ matrix.os.name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install packages
        run: sudo apt-get -y install build-essential
      - name: Create xymon user
        run: sudo useradd xymon
      - name: configure
        run: ./configure --server
      - name: build without any optional deps
        run: make
      - name: Install optionnal packages
        run: sudo apt-get -y install libssl-dev librrd-dev libc-ares-dev
      - name: build with any optional deps
        run: make
  build-debian-client-autotool:
    strategy:
      fail-fast: False
      matrix:
        os:
          - name: bullseye
          #- name: bookworm
    runs-on: ${{ matrix.os.name }},qemu
    name: build client on ${{ matrix.os.name }} with autotool
    steps:
      - uses: actions/checkout@v3
      - name: Install packages
        run: sudo apt-get -y install autotools-dev build-essential automake
      - name: Create xymon user
        run: sudo useradd xymon
      - name: Remove old makes
        run: find -iname Makefile | xargs rm -v
      - name: autoreconf
        run: autoreconf --install
      - name: configure
        run: ./configure
      - name: build without any optional deps
        run: make
      - name: Install optionnal packages
        run: sudo apt-get -y install libssl-dev librrd-dev libc-ares-dev
      - name: build with any optional deps
        run: make
